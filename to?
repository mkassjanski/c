object Main2 {

  def mkIndex(): List[(String, List[Int])] = {
  val src = io.Source.fromFile("machiavelli.txt","UTF-8")
  val lines = src.getLines
  // val x = lines.flatMap(x => x.split(" ")).toList.groupBy(x=>x).mapValues(x=>x)
  //val splittedWords = lineNum.map (e => (e._1.toString.split(" ").toList.groupBy(w => (w, e._2))))
  //val splittedWords = lineNum.map (e => (e._1.toString.split(" ").toList.grouped(1).toList))
  //val splittedWords2 = splittedWords.map { e => e._1.groupBy(w => (w, e._2)) }
  //val splittedWords3 = splittedWords2.map { e =>  }
  val lineNum = lines.zipWithIndex.toList
  val splittedWords = lineNum.map (e => (e._1.toString.split(" ").toList.map(w => (w, e._2)))).flatten
  val kkk = splittedWords.groupBy(e => e._1).toList.map(w => (w._1,w._2.map(k => k._2)))
  // toList.map(e=>e._2.map(w => (w._1, w._2))
  //println(kkk)  
  //val x = lines.toList.toString
  return kkk.sortBy(e => e._1)
  }

  def main(args: Array[String]): Unit = {
  println(mkIndex())
  }

}

